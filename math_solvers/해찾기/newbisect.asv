    function [root,Ea,maxit]=newbisect(func,xl,xu,Es,varargin)
% newbisect : func = 0 이 되는 근을 찾아간다.
%   [root,Ea]=newbisect(func,xl,xu,Es,p1,p2,....) :
%       새로운 bisection method를 사용해서 근을 찾는다.
% Input :
%   func = 대상 함수
%   xl, xu = 근이 있을거라 추측되는 구간
%   Es = 최대 오차값 (default = 0.0001%)
%   p1,p2,... = 함수의 다른 변수들의 값
% Output :
%   root = 추정근
%   Ea = 대략적인 상대오차(%)
%   maxit = 반복수행 개수
if nargin<3, error('at least 3 input arguments required'), end
test = func(xl,varargin{:})*func(xu,varargin{:});
if test>0, error('no sign change'), end
if nargin<4|isempty(Es), Es = 0.0001; end
xr = xl;
dx = xu - xl;
maxit=ceil(log(dx/Es)/log(2));
for iter = 1:1:maxit
    xrold = xr;
    xr = (xl + xu)/2;
    Ea = dx*2^(-1*iter);
    test = func(xl,varargin{:})*func(xr,varargin{:});
    if test < 0
        xu = xr;
    elseif test > 0
        xl = xr;
    else
        Ea = 0;
    end
end
root = xr;